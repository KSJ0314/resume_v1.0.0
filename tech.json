[
    {
        "id": 0,
        "image": "./images/java.png",
        "title": "Java",
        "contents": [
            "객체지향 프로그래밍에 대해 이해하고 있습니다.",
            "MVC 패턴에 대해 이해하고 있으며 JSP를 이용한 웹 프로젝트 경험이 있습니다.",
            "JSP를 이용한 웹 페이지를 토대로 Spring 웹 페이지 구현이 가능합니다."
        ]
    },
    {
        "id": 1,
        "image": "./images/react.png",
        "title": "React",
        "contents": [
            "Component의 rendering을 통한 SPA 구조를 이해하고 있습니다.",
            "React Hooks을 활용한 함수형 컴포넌트를 사용할 수 있으며 다양한 훅을 활용하여 상태 관리, 생명주기 처리, 컨텍스트 등을 다룰 수 있습니다",
            "styled-components를 사용하여 컴포넌트의 스타일링을 유연하게 처리할 수 있습니다. 또한, ThemeProvider를 활용하여 전체적인 테마를 쉽게 관리하고 적용할 수 있습니다."
        ]
    },
    {
        "id": 2,
        "image": "./images/html_css.png",
        "title": "HTML / CSS",
        "contents": [
            "시맨틱한 태그를 사용하여 의미 있는 웹 페이지의 구조를 표현할 수 있습니다.",
            "다양한 선택자와 속성을 사용하여 레이아웃을 디자인할 수 있으며 Flexbox를 활용하여 유연한 레이아웃을 설계하고 정렬할 수 있습니다."
        ]
    },
    {
        "id": 3,
        "image": "./images/js.png",
        "title": "JavaScript",
        "contents": [
            "웹 페이지의 동적 요소를 조작하고 상호작용하기 위해 DOM과 이벤트 처리에 대한 이해가 있습니다.",
            "Ajax를 사용하여 서버와 비동기적으로 데이터를 주고받을 수 있습니다.",
            "jQuery를 활용하여 DOM 조작, 이벤트 핸들링, 애니메이션 등을 쉽게 구현할 수 있습니다.",
            "기존의 HTML 페이지에 React 컴포넌트를 추가하여 동적인 UI를 구현할 수 있습니다."
        ]
    },
    {
        "id": 4,
        "image": "./images/oracle.png",
        "title": "MySQL / OracleDB",
        "contents": [
            "데이터베이스 관리 시스템으로 MySQL과 OraclDB를 사용할 수 있습니다.",
            "JSP, Spring에서 DB를 연결하고 쿼리문을 이용해 모델을 관리할 수 있습니다.",
            "트리거를 사용하여 특정 조건에서 자동으로 로그를 기록하는 등의 작업을 구현할 수 있습니다.",
            "프로시저를 사용하여 반복적으로 수행되는 작업을 하나의 논리적인 단위로 묶어서 실행할 수 있습니다."
        ]
    }
]